/**
 * @jest-environment jsdom
 */

import {screen, waitFor} from "@testing-library/dom"
import userEvent from "@testing-library/user-event";
import BillsUI from "../views/BillsUI.js"
import { bills } from "../fixtures/bills.js"
import Bills from "../containers/Bills.js";
import { ROUTES, ROUTES_PATH } from "../constants/routes"
import {localStorageMock} from "../__mocks__/localStorage.js"
import mockStore from "../__mocks__/store"
import router from "../app/Router.js";

describe("Given I am connected as an employee", () => {
  describe("When I am on Bills Page", () => {
    beforeAll(() => {
      // try to DRY this shit
    })
      test("Modal should have the class 'show'", async () => {
        const billsClass = new Bills(window, 'localStorage', { value: localStorageMock })
        window.localStorage.setItem('user', JSON.stringify({
          type: 'Employee'
        }));
        const root = document.createElement("div")
        root.setAttribute("id", "root")
        document.body.append(root)
        router()
        window.onNavigate(ROUTES_PATH.Bills)
        document.body.innerHTML = BillsUI({ data: bills })
        await waitFor(() => screen.getAllByTestId('icon-eye'));
        const icons = screen.getAllByTestId('icon-eye');
        const firstIcon = icons[0];
        //const modal = screen.getByTestId('img-modal');
        const modaleFile = document.getElementById('modaleFile')
        $.fn.modal = jest.fn(() => modaleFile.classList.add('show'));
        const handleClickOnIconEye = jest.fn((icon) => billsClass.handleClickIconEye(icon));
        icons.forEach(icon => {
          icon.addEventListener("click", handleClickOnIconEye(icon));
          userEvent.click(icon);
          expect(handleClickOnIconEye).toHaveBeenCalled();
          expect(modaleFile.classList.contains('show')).toBe(true);

          })
      })
    })

})